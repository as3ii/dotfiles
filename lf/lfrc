# basic settings
set preview true
set previewer ~/.script/preview
set hidden false
set color256 true
set drawbox true
set icons true
set ignorecase true
set shell sh
set shellopts '-eu'
set tabstop 4

# functions
cmd open ${{
    case "$f" in
        *.cue|*.m3u) setsid mpv "$f" > /dev/null 2>&1 &;;
        *) case $(file --mime-type "$f" -bL) in
            text/*|application/json) $EDITOR "$fx";;
            image/*) sxiv "${f%/*}" > /dev/null 2>&1 &;;
            application/x-dosexec) setsid wine "$f" > /dev/null 2>&1 &;;
            *) for f in "$fx"; do setsid xdg-open "$f" > /dev/null 2>&1 & done;;
        esac
    esac
}}


cmd mkdir %set -f; printf "Dir name: "; read ans; mkdir "$ans"

cmd touch ${{
    set -f
    printf "File name: "
    read ans; $EDITOR "$ans"
}}

# progress in paste command
cmd paste &{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    echo "$load" | sed '1d' | while read file; do
        if [ $mode = 'copy' ]; then
            rsync -av --ignore-existing --progress "$file" . \
            | stdbuf -i0 -o0 -e0 tr '\r' '\n' \
            | while read line; do
                lf -remote "send $id echo $line"
            done
        elif [ $mode = 'move' ]; then
            mv -n "$file" .
        fi
    done
    lf -remote 'send load'
    lf -remote 'send clear'
}}


# bulk rename
cmd bulk-rename ${{
    old=$(mktemp)
    new=$(mktemp)
    [ -n $fx ] && fx=$(ls)
    printf "$fx\n" > $old
    printf "$fx\n" > $new
    $EDITOR $new
    [ $(cat $new | wc -l) -ne $(cat $old | wc -l) ] && exit
    paste $old $new | while read names; do
        src=$(printf "$names" | cut -f1)
        dst=$(printf "$names" | cut -f2)
        [ "$src" = "$dst" ] && continue
        [ -e "$dst" ] && continue
        mv "$src" "$dst"
    done
    rm $old $new
    lf -remote "send $id unselect"
}}


# extract archive
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}


cmd term ${{
    $TERMINAL &
}}


cmd trash ${{
    dir=~/.local/share/Trash
    mkdir -p "$dir"
    for f in "$fx"; do
        mv -t "$dir" "$f"
    fi
}}

cmd du !ncdu -r --exclude-kernfs --si "${f%/*}"

cmd df !df --si

# disable some default keymap
map m
map "'"
map '"'

# keymap functions
map <enter> open
map <bs2> updir
map e $$TERMINAL -e $EDITOR "$f" &
map H set hidden!
map R :reload; redraw
map <delete> :trash; reload; reload

map gc cd ~/.config
map ge cd /etc
map gb cd /boot
map gh cd ~
map gd cd ~/Downloads
map ga cd /mnt/archive
map gs cd ~/.script
map gt cd ~/.local/share/Trash
map gpc cd ~/Pictures
map gpr cd ~/prog
map gu cd ~/UNI
map gm $lf -remote "send $id cd /run/media/$USER"

