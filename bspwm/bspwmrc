#!/bin/sh
# bspwm config file

TERMINAL="alacritty"    # terminal emulator command
TERMINALC="Alacritty"   # terminal emulator class
source "$HOME/.config/zsh/.zshenv"

# exec function: run only if not allready running
run() {
    pgrep -fx "$1" >/dev/null || $1 &
}

reload() {
    if pgrep -fx "$1" >/dev/null; then
        PID="$(pgrep -fx "$1")"
        timeout -k 3 2 killall -TERM "$1" || \
            timeout -k 3 2 killall -KILL "$1" || \
            killall -SEGV "$1"
        sleep 1
    fi
    $1 &
}


ws1="I"
ws2="II"
ws3="III"
ws4="IV"
ws5="V"
ws6="VI"
ws7="VII"
ws8="VIII"
ws9="IX"
ws10="X"


## WM config ##
bspc config border_width                  2
bspc config window_gap                    0
bspc config top_padding                   26
bspc config bottom_padding                0
bspc config left_padding                  0
bspc config right_padding                 0
bspc config single_monocle                false
bspc config split_ratio                   0.50
bspc config borderless_monocle            true
bspc config gapless_monocle               true
bspc config focus_follows_pointer         true
bspc config remove_disabled_monitors      true
bspc config remove_unplugged_monitors     true
bspc config merge_overlapping_monitors    true
bspc config pointer_modifier              mod4
bspc config pointer_action1               move
bspc config pointer_action2               resize_corner


### monitor settings ###
if xrandr --listproviders | grep -qi "NVIDIA-0"; then
    monitor_laptop="eDP-1-1"
    monitor_hdmi="HDMI-1-1"
else
    monitor_laptop="eDP1"
    monitor_hdmi="HDMI1"
fi
if xrandr -q | grep -qi "$monitor_hdmi connected"; then
    xrandr --output $monitor_laptop --auto --primary \
        --output $monitor_hdmi --auto --left-of $monitor_laptop
    xrandr --dpi 100
    bspc wm -O $monitor_laptop $monitor_hdmi
    bspc monitor $monitor_laptop -d $ws1 $ws2 $ws3 $ws4 $ws5 $ws6 $ws7 $ws8 $ws9 $ws10
    bspc monitor $monitor_hdmi -d $ws1 $ws2 $ws3 $ws4 $ws5 $ws6 $ws7 $ws8 $ws9 $ws10
else
    xrandr --output $monitor_laptop --auto --primary
    bspc monitor -d $ws1 $ws2 $ws3 $ws4 $ws5 $ws6 $ws7 $ws8 $ws9 $ws10
fi


### early start programs ###
reload "sxhkd"                                          # keybindings
if grep "1" /sys/class/power_supply/ADP*/online; then
    reload "picom --daemon --experimental-backends"
else
    pkill -fx "picom --daemon --experimental-backends"
fi
reload "dunst"                                          # notification daemon
pgrep -x "wallpaper.sh" || $HOME/.script/wallpaper.sh & # wallpaper script
pgrep -x "aa-notify" >/dev/null || \
    "aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log" & # apparmor notification
run "xbanish"                                           # hide cursor when typing
run "optimus-manager-qt"                                # manage multiple GPUs
run "clipmenud"
#run "qjackctl"                                          # server audio
pgrep -x "udiskie" >/dev/null || udiskie -qtF &         # removable media's automounter
reload "mpd"                                            # music server
# launch mpd-mpris with automatic restart when crash
if pgrep -fx "mpd-mpris" >/dev/null; then
    PID="$(pgrep -fx "mpd-mpris")"
    PPID="$(cut -f2 "/proc/$PID/status")"
    timeout -k 3 2 kill -TERM $PPID || \
        timeout -k 3 2 kill -KILL $PPID
    sleep 1
else
    while true; do
        mpd-mpris
        sleep 1
    done &
fi

# keyboard settings
setxkbmap it
numlockx on

# default workspace # xprop -> WM_CLASS(string) -> second argument
bspc rule -r "*"
bspc rule -a "firefox" desktop=$ws3
bspc rule -a "TelegramDesktop" desktop=$ws4
#bspc rule -a "mpv" desktop=$ws5
bspc rule -a "qBittorrent" desktop=$ws6
bspc rule -a "Thunderbird" desktop=$ws7
bspc rule -a $TERMINALC:"alsamixer" desktop=$ws8
bspc rule -a $TERMINALC:"htop" desktop=$ws9
bspc rule -a $TERMINALC:"nmon" desktop=$ws9
bspc rule -a "Keybase" desktop=$ws10
bspc rule -a $TERMINALC:"ncmpcpp" desktop=$ws10
bspc rule -a "KVIrc" desktop=$ws6

# late start programs
killall -q polybar
for m in $(xrandr --query | grep " connected" | cut -d" " -f1); do
    MONITOR=$m polybar --reload example &
done
pgrep -x "firefox" >/dev/null || apulse firefox &
reload "telegram-desktop"
run "$TERMINAL --class alsamixer -e alsamixer"
run "$TERMINAL --class htop -e htop"
run "$TERMINAL --class nmon -e nmon"
run "syncthing -no-browser -logflags=3 \
    -logfile=${XDG_DATA_HOME:-HOME/.local/share}/syncthing.log"
pgrep -x "thunderbird" >/dev/null || thunderbird &
#pgrep -x "keybase" >/dev/null || run_keybase -a &
pgrep -x "ncmpcpp" >/dev/null || $TERMINAL --class ncmpcpp -e sh -c 'ncmpcpp -q' &
#run "kvirc"
