#!/bin/sh
# bspwm config file

TERMINAL="alacritty"    # terminal emulator command
TERMINALC="Alacritty"   # terminal emulator class
. /"$HOME"/.config/zsh/.zshenv

# exec function: run only if not allready running
run() {
    pgrep -fx "$(printf "%s" "$1" | sed 's/nice -n [0-9]* //')" >/dev/null || \
        nohup sh -c "$1" >/dev/null 2>&1 &
}

reload() {
    if pgrep -fx "$(printf "%s" "$1" | sed 's/nice -n [0-9]* //')" >/dev/null; then
        PID="$(pgrep -fx "$1")"
        timeout -k 3 2 killall -TERM "$1" || \
            timeout -k 3 2 killall -KILL "$1" || \
            killall -SEGV "$1"
        sleep 1
    fi
    nohup sh -c "$1" >/dev/null 2>&1 &
}

BAT=$(cat /sys/class/power_supply/ADP1/online)  # 0 = false, 1 = true

ws1="I"
ws2="II"
ws3="III"
ws4="IV"
ws5="V"
ws6="VI"
ws7="VII"
ws8="VIII"
ws9="IX"
ws10="X"


## WM config ##
bspc config border_width                  1
bspc config window_gap                    0
bspc config top_padding                   26
bspc config bottom_padding                0
bspc config left_padding                  0
bspc config right_padding                 0
bspc config single_monocle                true
bspc config split_ratio                   0.50
bspc config borderless_monocle            true
bspc config gapless_monocle               true
bspc config focus_follows_pointer         true
bspc config remove_disabled_monitors      true
bspc config remove_unplugged_monitors     true
bspc config merge_overlapping_monitors    true
bspc config pointer_modifier              mod4
bspc config pointer_action1               move
bspc config pointer_action2               resize_corner


### monitor settings ###
if xrandr --listproviders | grep -qi "NVIDIA-0"; then
    monitor_laptop="eDP-1-1"
    monitor_hdmi="HDMI-1-1"
else
    monitor_laptop="eDP1"
    monitor_hdmi="HDMI1"
fi
if xrandr -q | grep -qi "$monitor_hdmi connected"; then
    xrandr --output $monitor_laptop --auto --primary \
        --output $monitor_hdmi --auto --left-of $monitor_laptop
    xrandr --dpi 100
    bspc wm -O $monitor_laptop $monitor_hdmi
    bspc monitor $monitor_laptop -d $ws1 $ws2 $ws3 $ws4 $ws5 $ws6 $ws7 $ws8 $ws9 $ws10
    bspc monitor $monitor_hdmi -d $ws1 $ws2 $ws3 $ws4 $ws5 $ws6 $ws7 $ws8 $ws9 $ws10
else
    xrandr --output $monitor_hdmi --off
    xrandr --output $monitor_laptop --auto --primary
    bspc monitor -d $ws1 $ws2 $ws3 $ws4 $ws5 $ws6 $ws7 $ws8 $ws9 $ws10
fi


### early start programs ###
reload "nice -n 5 sxhkd"                                        # keybindings
reload "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
if [ "$BAT" -eq 1 ]; then
    reload "nice -n 20 picom --daemon --experimental-backends"
else
    pkill -fx "picom --daemon --experimental-backends"
fi
reload "nice -n 5 dunst"                                        # notification daemon
pgrep -x "wallpaper.sh" || nice -n 20 "$HOME"/.script/wallpaper.sh & # wallpaper script
pgrep -x "aa-notify" >/dev/null || \
    "aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log" & # apparmor notification
run "nice -n 20 xbanish"                                        # hide cursor when typing
run "nice -n 10 optimus-manager-qt"                             # manage multiple GPUs
run "nice -n 5 clipmenud"
run "nice -n 10 cbatticon"
run "nice -n 5 veracrypt --use-dummy-sudo-password --background-task"
run "nice -n 5 nm-applet"
run "nice -n 5 espanso daemon"
#pgrep -x "xcape" || xcape -e 'Caps_Lock=Escape|Caps_Lock' # remap fast press of caps
### server audio
while true; do
    sleep 5
    pgrep -x "qpwgraph" >/dev/null || ( \
        qpwgraph -m
        sudo chrt -fap 70 "$(pidof qpwgraph)"
    )
done &
#while true; do
    #sleep 5
    #pgrep -x "non-mixer" >/dev/null || ( \
        sudo chrt -fap 89 "$(pidof pipewire)"
        sudo chrt -fap 88 "$(pidof pipewire-pulse)"
        sudo chrt -fap 87 "$(pidof pipewire-media-session)"
        #non-mixer /home/as3ii/.config/ntk/mixer >/dev/null
        #sudo chrt -fap 80 "$(pidof non-mixer)"
    #)
#done &
pgrep -x "udiskie" >/dev/null || nice -n 10 udiskie -qtF &      # removable media's automounter
pgrep -x "solaar" >/dev/null || nice -n 20 solaar -w hide >/dev/null 2>&1 &    # logitech mouse
# if pgrep -fx "$(printf "%s" "mpd" | sed 's/nice -n [0-9]* //')" >/dev/null; then
#     sleep 1
#     PID="$(pgrep -fx "mpd")"
#     timeout -k 3 2 killall -TERM "mpd" || \
#         timeout -k 3 2 killall -KILL "mpd" || \
#         killall -SEGV "mpd"
# fi
# nohup sh -c "chrt -f 10 mpd" >/dev/null 2>&1 &

# # launch mpd-mpris with automatic restart when crash
# if pgrep -fx "mpd-mpris" >/dev/null; then
#     PID="$(pgrep -fx "mpd-mpris")"
#     PPID="$(cut -f2 "/proc/$PID/status")"
#     timeout -k 3 2 kill -TERM "$PPID" || \
#         timeout -k 3 2 kill -KILL "$PPID"
#     sleep 1
# else
#     while true; do
#         nice -n 10 mpd-mpris
#         sleep 4
#     done &
# fi

# keyboard settings
setxkbmap en altgr-intl
numlockx on
libinput-gestures-setup restart

# default workspace # xprop -> WM_CLASS(string) -> second argument
bspc rule -r "*"
bspc rule -a "firefox" desktop=$ws3
bspc rule -a "TelegramDesktop" desktop=$ws4
bspc rule -a "qBittorrent" desktop=$ws6
bspc rule -a "KVIrc" desktop=$ws6
bspc rule -a "thunderbird" desktop=$ws7
bspc rule -a $TERMINALC:"alsamixer" desktop=$ws8
bspc rule -a "Non-Mixer" desktop=$ws8
bspc rule -a "htop" desktop=$ws9
bspc rule -a "nmon" desktop=$ws9
bspc rule -a "btop" desktop=$ws10
bspc rule -a "dropdown1" sticky=on state=floating # scratchpad
bspc rule -a "dropdown2" sticky=on state=floating # scratchpad

bspc rule -a "steam_app_1182480" state=floating # battlefield 4 origin
bspc rule -a "steam_app_377160" state=fullscreen # fallout 4

# late start programs
killall -q polybar
MONITOR=$monitor_laptop ALSA_CARD=$ALSA_CARD ALSA_MASTER_MIXER=$ALSA_MASTER_MIXER \
    nice -n 5 polybar --reload main &
if xrandr -q | grep -qi "$monitor_hdmi connected"; then
    MONITOR=$monitor_hdmi ALSA_CARD=$ALSA_CARD ALSA_MASTER_MIXER=$ALSA_MASTER_MIXER \
        nice -n 5 polybar --reload secondary &
fi
#pgrep -x "firefox" >/dev/null || nice -n 5 firefox &
reload "nice -n 10 telegram-desktop"
#run "$TERMINAL --class alsamixer -e alsamixer"
run "$TERMINAL --class htop -e htop"
run "$TERMINAL --class nmon -e nmon"
run "$TERMINAL --class btop -e btop"
[ "$BAT" -eq 1 ] &&  run "syncthing -no-browser -logflags=3 \
    -logfile=${XDG_DATA_HOME:-HOME/.local/share}/syncthing.log"
pgrep -x "thunderbird" >/dev/null || nice -n 10 thunderbird &
# pgrep -x "ncmpcpp" >/dev/null || $TERMINAL --class ncmpcpp -e sh -c 'ncmpcpp -q' &
# run "kvirc"


# remove rules
(sleep 5 && bspc rule -r "firefox")&
(sleep 5 && bspc rule -r "TelegramDesktop")&

